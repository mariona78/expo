{"version":3,"file":"AudioModule.types.js","sourceRoot":"","sources":["../src/AudioModule.types.ts"],"names":[],"mappings":"","sourcesContent":["export type StatusEvent = {\n  currentPosition: number;\n  status: string;\n  timeControlStatus: string;\n  reasonForWaitingToPlay: string;\n  isMuted: boolean;\n  duration: number;\n  isPlaying: boolean;\n};\n\nexport declare class AudioPlayer {\n  /**\n   * Boolean value whether the player is currently playing.\n   */\n  isPlaying: boolean;\n\n  /**\n   * Boolean value whether the player is currently muted.\n   */\n  isMuted: boolean;\n\n  /**\n   * Boolean value whether the player is currently looping.\n   */\n  isLooping: boolean;\n\n  /**\n   * Boolean value whether the player is finished loading.\n   */\n  isLoaded: boolean;\n\n  /**\n   * The current position through the audio item, in seconds.\n   */\n  currentPosition: number;\n\n  /**\n   * The total duration of the audio, in seconds.\n   */\n  duration: number;\n\n  /**\n   * The current volume of the audio.\n   */\n  volume: number;\n\n  /**\n   * The current playback rate of the audio.\n   */\n  rate: number;\n\n  /**\n   * Resumes the player.\n   */\n  play(): void;\n\n  /**\n   * Pauses the player.\n   */\n  pause(): void;\n\n  /**\n   * Seeks the playback by the given number of seconds.\n   */\n  seekTo(seconds: number): Promise<void>;\n}\n"]}